{"version":3,"sources":["assets/bg.mp4","components/header/Header.js","components/header/NavigationBar.js","components/body/services/Services.js","components/body/about/About.js","components/body/Body.js","components/main/Main.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","Component","props","getDate","today","Date","dd","mm","getMonth","yyyy","getFullYear","weekday","Array","getDay","state","state1","document","addEventListener","state2","window","scrollY","setState","className","this","autoplay","muted","loop","id","src","BgVideo","type","Services","Row","Col","About","Container","Body","Main","App","Boolean","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"mIAAAA,EAAOC,QAAU,IAA0B,gC,oQC8F5BC,GC5FaC,Y,wDDMxB,WAAYC,GAAO,IAAD,8BACd,cAAMA,IAKVC,QAAU,WACN,IAAIC,EAAQ,IAAIC,KACZC,EAAKF,EAAMD,UACXI,EAAKH,EAAMI,WAAW,EACtBC,EAAOL,EAAMM,cACbC,EAAU,IAAIC,MAAM,GAmBxB,OAlBAD,EAAQ,GAAK,SACbA,EAAQ,GAAK,SACbA,EAAQ,GAAK,UACbA,EAAQ,GAAK,YACbA,EAAQ,GAAK,WACbA,EAAQ,GAAK,SACbA,EAAQ,GAAK,WAIVL,EAAG,KACFA,EAAK,IAAIA,GAGVC,EAAG,KACFA,EAAK,IAAIA,GAGEE,EAAO,IAAMF,EAAK,IAAMD,EAAK,IAVpCK,EAAQP,EAAMS,WAlBtB,EAAKC,MAAM,CACPC,OAAQ,iBAHE,E,gEAiCG,IAAD,OAChBC,SAASC,iBAAiB,UAAU,WAClC,IAAMC,EAASC,OAAOC,QAAU,GAAK,gBAAkB,gBAEvD,EAAKC,SAAS,CACVN,OAAQG,S,+BAcd,OACI,yBAAKI,UAAWC,KAAKT,MAAMC,QACvB,2BAAOS,SAAS,WAAWC,OAAK,EAACC,KAAK,OAAOC,GAAG,SAChD,4BAAQC,IAAKC,IAASC,KAAK,cAD3B,8CAIA,yBAAKR,UAAU,WACX,yBAAKA,UAAU,WACX,yBAAKA,UAAU,eACX,sDACA,8CACA,oDAGR,yBAAKA,UAAU,mBACX,4BAAKC,KAAKpB,YAEd,yBAAKmB,UAAU,uBAEf,yBAAKA,UAAU,gCAEf,yBAAKA,UAAU,iCAEf,yBAAKA,UAAU,qBAEf,yBAAKA,UAAU,4B,GA9EdrB,c,gBEoBN8B,G,6KApBP,OACI,yBAAKT,UAAU,YACX,yBAAKA,UAAU,SACX,kBAACU,EAAA,EAAD,CAAKV,UAAU,WACX,kBAACW,EAAA,EAAD,CAAKX,UAAU,eAAf,eAGA,kBAACW,EAAA,EAAD,CAAKX,UAAU,eAAf,UAGA,kBAACW,EAAA,EAAD,CAAKX,UAAU,eAAf,qB,GAZDrB,c,QC8BRiC,G,6KA5BP,OACI,yBAAKZ,UAAU,SACX,yBAAKA,UAAU,SACX,yBAAKA,UAAU,WACX,kBAACa,EAAA,EAAD,KACI,kBAACH,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACI,0BAAMX,UAAU,WAAhB,WAKR,kBAACU,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,mOAEJ,kBAACD,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,mFACA,kBAACA,EAAA,EAAD,gFACA,kBAACA,EAAA,EAAD,qF,GApBZhC,cCYLmC,E,uKAVP,OACI,6BACI,kBAAC,EAAD,MAEA,kBAAC,EAAD,W,GANGnC,aCYJoC,E,uKAVP,OACI,6BACI,kBAAC,EAAD,MAEA,kBAAC,EAAD,W,GANGpC,aCQJqC,MARf,WACE,OACE,6BACE,kBAAC,EAAD,QCIcC,QACW,cAA7BpB,OAAOqB,SAASC,UAEe,UAA7BtB,OAAOqB,SAASC,UAEhBtB,OAAOqB,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEF7B,SAAS8B,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.033a0208.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/bg.04bd99a1.mp4\";","import React, { Component } from 'react'\r\nimport {Cotainer} from 'react-bootstrap'\r\n\r\nimport BgVideo from '../../assets/bg.mp4'\r\nimport NavigationBar from './NavigationBar'\r\nimport '../../css/header/header.css'\r\n\r\nclass Header extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state={\r\n            state1: \"header state1\"\r\n        }\r\n    }\r\n    getDate = () => {\r\n        var today = new Date();\r\n        var dd = today.getDate();\r\n        var mm = today.getMonth()+1; //January is 0!\r\n        var yyyy = today.getFullYear();\r\n        var weekday = new Array(7);\r\n        weekday[0] = \"Sunday\";\r\n        weekday[1] = \"Monday\";\r\n        weekday[2] = \"Tuesday\";\r\n        weekday[3] = \"Wednesday\";\r\n        weekday[4] = \"Thursday\";\r\n        weekday[5] = \"Friday\";\r\n        weekday[6] = \"Saturday\";\r\n\r\n        var d = weekday[today.getDay()];\r\n\r\n        if(dd<10) {\r\n            dd = '0'+dd\r\n        } \r\n\r\n        if(mm<10) {\r\n            mm = '0'+mm\r\n        } \r\n\r\n        return today = yyyy + '/' + mm + '/' + dd + ' ' + d;\r\n    }\r\n\r\n    componentDidMount() {\r\n        document.addEventListener(\"scroll\", () => {\r\n          const state2 = window.scrollY < 10 ? \"header state1\" : \"header state2\";\r\n\r\n          this.setState({ \r\n              state1: state2\r\n            });\r\n        });\r\n\r\n        \r\n    // window.addEventListener('resize', () => {\r\n    //     const state2 = window.innerWidth < 768 ? \"header state2\" : \"header state1\";\r\n    //     this.setState({\r\n    //         state1: state2\r\n    //     });\r\n    // });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={this.state.state1}>\r\n                <video autoplay=\"autoplay\" muted loop=\"loop\" id=\"video\">\r\n                <source src={BgVideo} type=\"video/mp4\" />\r\n                Your browser does not support HTML5 video.\r\n                </video>\r\n                <div className=\"wrapper\">\r\n                    <div className=\"content\">\r\n                        <div className=\"center-text\">\r\n                            <h1>Whole Cell Accessories</h1>\r\n                            <h2>Open To Public</h2>\r\n                            <h2>Never Pay Retail!!</h2>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"page-border top\">\r\n                        <h5>{this.getDate()}</h5>\r\n                    </div>\r\n                    <div className=\"page-border bottom\">\r\n                    </div>\r\n                    <div className=\"page-border left border-pad\">\r\n                    </div>\r\n                    <div className=\"page-border right border-pad\">\r\n                    </div>\r\n                    <div className=\"page-border left\">\r\n                    </div>\r\n                    <div className=\"page-border right\">\r\n                    </div>\r\n                </div>\r\n                {/* <NavigationBar /> */}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Header\r\n","import React, { Component } from 'react'\r\n\r\nclass NavigationBar extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default NavigationBar\r\n","import React, { Component } from 'react'\r\n\r\nimport {Row, Col} from 'react-bootstrap'\r\nimport '../../../css/body/services/services.css'\r\n\r\nclass Services extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"services\">\r\n                <div className=\"bgimg\">\r\n                    <Row className=\"content\">\r\n                        <Col className=\"acc-col col\">\r\n                        Accessories\r\n                        </Col>\r\n                        <Col className=\"rep-col col\">\r\n                        Repair\r\n                        </Col>\r\n                        <Col className=\"act-col col\">\r\n                        Activation\r\n                        </Col>\r\n                    </Row>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Services\r\n","import React, { Component } from 'react'\r\nimport {Container, Row, Col} from 'react-bootstrap'\r\n\r\nimport '../../../css/body/about/about.css'\r\n\r\nclass About extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"about\">\r\n                <div className=\"bgimg\">\r\n                    <div className=\"content\">\r\n                        <Container>\r\n                            <Row>\r\n                                <Col>\r\n                                    <span className=\"heading\">\r\n                                        About\r\n                                    </span>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row>\r\n                                <Col>Lorem ipsum dolor sit amet consectetur adipisicing elit. Unde animi doloribus hic tempora in asperiores quia expedita ipsum minima vel possimus, ipsa accusamus voluptas repellat, reiciendis consequuntur eos minus eum.</Col>\r\n                            </Row>\r\n                            <Row>\r\n                                <Col>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Beatae, numquam?</Col>\r\n                                <Col>Lorem ipsum dolor sit amet consectetur adipisicing elit. Aut, quisquam?</Col>\r\n                                <Col>Lorem ipsum dolor sit amet consectetur adipisicing elit. Vel, enim.</Col>\r\n                            </Row>\r\n                        </Container>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default About\r\n","import React, { Component } from 'react'\r\n\r\nimport Services from './services/Services'\r\nimport About from './about/About'\r\n\r\nclass Body extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Services />\r\n\r\n                <About />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Body\r\n","import React, { Component } from 'react'\r\n\r\nimport Header from '../header/Header'\r\nimport Body from '../body/Body'\r\n\r\nclass Main extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Header />\r\n\r\n                <Body />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Main\r\n","import React from 'react';\r\nimport './css/App.css';\r\n\r\nimport Main from './components/main/Main'\r\n\r\nfunction App() {\r\n  return (\r\n    <div>\r\n      <Main />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}